[env]
LIBRIME_INCLUDE_DIR = "${CARGO_MAKE_WORKING_DIRECTORY}/librime/dist/include"
LIBRIME_LIB_DIR = "${CARGO_MAKE_WORKING_DIRECTORY}/librime/dist/lib"

[tasks.pre-build]
condition = { platforms = ["mac", "windows"], files_not_exist = ["${CARGO_MAKE_WORKING_DIRECTORY}/librime"] }
run_task = "fetch-librime-src"

[tasks.fetch-librime-src]
command = "git"
args = ["clone", "https://github.com/rime/librime.git", "--recursive"]

[tasks.build]
dependencies = ["build-librime"]
args = ["build", "--verbose"]

[tasks.test]
args = ["test", "--verbose"]
env.DYLD_FALLBACK_LIBRARY_PATH = { value = "${LIBRIME_LIB_DIR}", condition = { platforms = ["mac"] } }
env.LD_LIBRARY_PATH = { value = "${LIBRIME_LIB_DIR}", condition = { platforms = ["linux"] } }
env.PATH = { value = "${LIBRIME_LIB_DIR}", condition = { platforms = ["windows"] } }

[tasks.build-librime]
linux_alias = "empty"
mac_alias = "build-librime-posix"
windows_alias = "build-librime-windows"

[tasks.build-librime-posix]
dependencies = ["build-librime-deps"]
script = 'make -C librime && make -C librime install'

[tasks.build-librime-windows]
dependencies = ["build-librime-deps"]
script = '.\build.bat'

[tasks.build-librime-deps]
windows_alias = "build-librime-deps-windows"
alias = "build-librime-deps-posix"

[tasks.build-librime-deps-posix]
script = 'make -C librime deps'

[tasks.build-librime-deps-windows]
script = '.\build.bat deps'
